# Default options file for myphotoshare
#
# This file is imported through the ConfigParser standard module
#       boolean values:
#          1 = yes = true;
#          0 = no;
# Do not use uppercase letters, they won't be detected properly somewhere
#
# This file sets the default options: they are read by scanner/Options.py
#
# Do not modify this file:
# * copy it to any location on your disk (e.g. /etc/myphotoshare) and rename it removing the trailing ".defaults"
# * then, in _your_ copy:
# * - do not remove nor change the `[options]` marker
# * - set the `physical folders` at the beginning
# * - have fun customizing the other options!
# * - if you want to go back to an option default value, add a leading `#` to the option or remove the line

# Your config values will supersede the standard ones defined here

[options]

##########################################################
###########################################################
# physical folders
# YOU MUST SET THESE OPTIONS
###########################################################
##########################################################

# absolute path of the folder where index.php/html resides; normally album_path will be its "albums" subfolder, and cache_path its "cache" subfolder
index_html_path =

# albums folder absolute path, for use in python
album_path =

# cache folder absolute path, for use in python
# WARNING: javascript code will always use 'cache' subfolder of web site, so assure yourself that this folder corresponds to or is moved to the correct web site path
cache_path =


##########################################################
##########################################################
# optional customization
###########################################################
##########################################################


##########################################################
# debugging
###########################################################

# debug CSS and JavaScript: don't use minified versions
debug_css = false
debug_js = false

# verbosity level, a number 0-5
# 0 = initial options and fatal errors
# 1 = non-fatal errors
# 2 = warnings
# 3 = browsing info
# 4 = other info
# 5 = more info
max_verbose = 3

# This is a debug option: it lets the scanner show the faces detected
# obviously it only make sense when the scanner is run interactively, because the user must close every image with a keystroke
# I'm getting it working if running in pyCharm, the scanner stops with a segfault if run from terminal. Why????
show_faces = false

# Memory profiling (Python >= 3.4)
# Dumps the memory usage of scanner when indexing is completed.
debug_memory = false

# Execution profiling
# Dumps function calls sorted by execution time
debug_profile = false

###########################################################
# minifying
###########################################################

# Use system javascript libraries instead of the versions instead of the ones supplied.
use_system_js_libraries = false

# CSS minifier
# permitted values:
#    web_service : https://cssminifier.com/
#    cssmin : cssmin (https://github.com/zacharyvoase/cssmin) (Default)
#    rcssmin3: python3-rcssmin (http://opensource.perlig.de/rcssmin/)
css_minifier = cssmin

# JavaScript minifier
# permitted values:
#    web_service : https://javascript-minifier.com/
#    jsmin3 : python3-jsmin (https://github.com/tikitu/jsmin) (Default)
#    terser: uglifyjs.terser (https://terser.org/)
js_minifier = jsmin3


###########################################################
# scanner options
###########################################################

# default cache subfolder to use when no subdir is generate
default_cache_album = media_reductions

# cache subfolder for composite images: where the album composite images will be saved
cache_album_subdir = cache_album

# Filename where user-defined metadata is stored in albums
metadata_filename = album.ini

# the method to use for generating cache 2-characters subdirs
# permitted values:
#    md5	: the leading 2 characters of the md5 of the image/video path relative to albums dir
#    folder	: the leading 2 characters of the subfolder of the image/video path relative to albums dir
#    (none)	: no subfolders
subdir_method = md5

# #######################
# Video encoding options
#
# See https://trac.ffmpeg.org/wiki/Encode/H.264 and ffmpeg documentation if you change these options.
#    ###############################################################################
#    BEWARE:
#    The following video options are EXPERIMENTAL and could be removed in a future version
#    of MyPhotoShare.
#    ###############################################################################

# The transcode bitrate used for videos: an integer, the bitrate in bits/s, even in notation nnk, nnM
video_transcode_bitrate = 1M

# The crf used for videos (see http://slhck.info/video/2017/02/24/crf-guide.html)
# a 0 <= integer <= 51
video_crf = 20

# A preset is a collection of options that will provide a certain encoding speed to compression ratio.
# A slower preset will provide better compression (compression is quality per filesize). This means that,
# for example, if you target a certain file size or constant bit rate, you will achieve better quality with
# a slower preset. Similarly, for constant quality encoding, you will simply save bitrate by choosing a slower preset.
# Use the slowest preset that you have patience for. The available presets in descending order of speed are:
#
#    ultrafast
#    superfast
#    veryfast
#    faster
#    fast
#    medium
#    slow â€“ default preset
#    slower
#    veryslow
video_preset = slow

# profile limits the output to a specific H.264 profile. Omit this unless your target device only supports a certain
# profile.
# Current profiles include:
#    baseline
#    main
#    high
#    high10
#    high422
#    high444
video_profile = baseline

# Profile level, used for platforms compatibility (see https://trac.ffmpeg.org/wiki/Encode/H.264).
video_profile_level = 3.0

# Audio channels
video_audio_ac = 2

# Audio bit rate
video_audio_ab = 160k

# Limits max rate, will degrade CRF if needed
video_maxrate = 10M

# Define how much the client should buffer
video_bufsize = 10M

# The video frame maximum size. Can be hd480, hd720 (default) or hd1080.
video_frame_maxsize = hd720

# Additional options to pass to the encoder
video_add_options =

# End of video encoding options
# #######################


# The jpg quality parameter for generating the reduced size images and the tumbnails
# an integer number 1 - 100
jpeg_quality = 95

# markers that permit not to scan files in folder or whole trees
#     ###############################################################################
#     BEWARE:
#     if you use this feature and don't change this options, the user can know what files/trees you are hiding,
#     and therefore he/she could try to access them in the `/albums/` tree
#     ###############################################################################
exclude_files_marker = .myphotoshare.exclude.files
exclude_tree_marker = .myphotoshare.exclude.tree

# a file, relative to the directory of the configuration file, whose lines are regex patterns for excluding certain files from scanning
# the directory/file name is matched against every pattern with re.search()
# use ^ at the beginning and $ at the end of the patterns if you want a match on the whole directory/file name (including extension)
# lines beginning with # are skipped
excluded_patterns_file = myphotoshare.excluded

# marker for passwords: put it in the album you want to protect
# every line is either:
# - a password identifier: the album and all its subalbums will be protected by the password assigned to the identifier;
# - a password identifier followed by some of the available flags, comma-separated (or a dash if none), and a pattern (shell wildcards are recognized):
#     the subalbums/media matched by the pattern will be protected by the password assigned to the identifier
# The flags:
# - "ci/cs": case sensitive/insensitive (default: ci)
# - "part/whole": whole name/part o it (default: part)
# - "filesonly/dirsonly/both": only check against file names/dir names (default: both)
#    ###############################################################################
#    BEWARE:
#    if you have protected content and don't change this option, the user can know what files you are protecting,
#    and therefore he/she could try to access them in the `/albums/` tree
#    ###############################################################################
passwords_marker = .myphotoshare.passwords

# password file, relative to the directory of the configuration file
passwords_file = myphotoshare.passwords

# the cache subdir where the passwords files are stored by the scanner
# changing it to a more complex value may suppose a stronger security,
# but it's not so, because this value must be saved in the `options.json` file
passwords_subdir = pwd

# the prefix for the protected directories where json files are stored
protected_directories_prefix = protected_

# put here the email address for requesting the password(s)
request_password_email =

# recreate fixed height media thumbnails if their ratio (width/height) is > 1,
# in order to get rid of a past bug in thumbnail generator
recreate_fixed_height_thumbnails = false

# should symlinks be follwed when scanning the albums tree?
# beware: setting to true exposes to the risk of never endind loops
follow_symlinks = false

# should the scanner generate a checksum in order to know if the media has changed?
# this option is useful with geotagged photos, whose geotag is put in the file by apps that restore the file modification datetime
# if not using geotags, it can safely be left to false
checksum = false

# When detecting faces with opencv, a scaleFactor must be given
# See the beginning of the page https://docs.opencv.org/2.4/modules/objdetect/doc/cascade_classification.html
# The page doesn't say what values this parameter can have, it seems that it must be strictly > 1
# Must be a float
face_cascade_scale_factor = 1.1

# How many thumbnails should we put at most in the image that php generates for sharing albums?
# it must be an integer, and a square: 4, 9, 16,..
max_album_share_thumbnails_number = 16

# should stop words be used?
# for a small set of media/albums it's not needed, while perhaps it's necessary if working with many media
use_stop_words = true

# What prefence order do you want for the metadata extractors?
# The first tool will be used, the second will be used in case of no success, and so on
# Available tools are 'PIL', 'exifread', 'exiftool'
# - exiftool is the most affordable, but the slowest (about half the speed of PIL)
# - exifread sometimes crashes if the metadata are corrupted; its speed is between exiftool's and PIL's
# - PIL doesn't find the metadata on some old image
# If you don't worry with execution time you can let this option to ['exiftool', 'exifread', 'PIL']
# If you prefer shorter execution times set it to ['PIL', 'exifread', 'exiftool']
# The default is the best in term of affordability
metadata_tools_preference = ['exiftool', 'exifread', 'PIL']


# How many processors should be used when converting videos? 1 is always a safe value, but you could need more power:
# - on desktop computers the number of core minus 1 is probably ok, because the computer isn't supposed to perform important tasks
# - on servers, set it to a value which leave to the current tasks the cores they need,
#   so that MyPhotoShare does not steal precious resources to normal server activity;
#   e.g., with 8 cores, you could set it to 4 or 2
num_processors = 1

# Should exif metadata (including copyright info) be copied into all the reductions and thumbnails?
copy_exif_into_reductions = false

# What is the maximum number of media that will be put in the album json files?
# 0 = never separate media file
max_media_in_json_file = 100
# What is the maximum number of media in positions that will make positions be put in the album json files?
# 0 = never separate positions file
max_media_from_positions_in_json_file = 100

###########################################################
# scanner and ui options
###########################################################

# The sizes for the reduced images
# they must be reverse ordered, i.e. from biggest to smallest
# a void array is allowed: this way the original image will be used all the ways, possibly the load times will be higher
reduced_sizes = [1200, 800]

# The sizes for the thumbnails to use for albums
album_thumb_size = 200

# How should we generate the album thumbnails?
# permitted values:
#    square	: photofloat's classical cropped square thumbnail
#    fit	: rectangular thumbnail fitting in the given size
album_thumb_type = square

# The sizes for the thumbnails for images/videos
media_thumb_size = 150

# How should we generate the media thumbnails?
# permitted values:
#    square		: photofloat's classical thumbnail
#    fixed_height	: whole image, the size determines the height, the width will depend on orientation
media_thumb_type = square

# what color will be used for crops smaller that canonical size?
# if you do not want to see the border, set this option to the same color as background_color' one
small_square_crops_background_color = gray

# on mobile screens, which have many pixels but very compressed, browsers do aggregate pixels in order to give the user a correct experience,
# but this means that an image having 200x200 will be presented on, say, a 300x300 square, so that the user will see it blurred.
# In order to see it using every real pixel, a bigger thumbnail for albums and media can be generated, using a multiplying factor specified in this option.
# Value must be an integer or float number > 1
# Disable this feature setting it to 1; values < 1 will be considered equivalent to 1
mobile_thumbnail_factor = 2

# strings used internally, do not change them unless you know what you are doing
folders_string = _f
by_date_string = _bd
by_gps_string = _bg
by_search_string = _bs
by_map_string = _bm
by_selection_string = _be
cache_folder_separator = -
search_options_separator = .

# The language you want to get the geonames features
# must be a 2 character code, like 'en' (without quotes)
# If not set, it defaults to the 'language' options (if set)
# If 'language' is not set, it defaults to the system language
geonames_language =

# The code the scanner assigns to places with unspecified name and code
# Usually the admin name may be undefined
# The name is left as a 0-length string, and the translation js file gives a localized value for it
unspecified_geonames_code = 000000

# should the scanner get locations from coordinates from online geonames.org web service?
# if false, the geonames.org's cities1000.txt file will be used
# - local procedure is faster (about 20 Î¼s) than online one (about 80ms)
# - online procedure knows all the place names, while local procedure only knows places with population > 1000
# - online procedure produces local language names, while local procedure produces exclusively english names
# - online procedure is surely more up to date than local one
get_geonames_online = false

# geoname user for geonames.org requests
# The value here ('myphotoshare') is like a demo
# you can use it in testing phase, but you must generate a new user for production installs:
# simply go to http://www.geonames.org/login and use the "create a new user account" dialog
# you'll receive an address confirmation email
# After confirming your email address, you must enable your account for web services:
# when you are logged in, go to your account options pages and enable web services
# That's all!
geonames_user = myphotoshare

# When should a virtual (date, gps) album be considered big?
# Do not set it to a small value or you could get too many albums!
big_virtual_folders_threshold = 999


###########################################################
# js options
###########################################################

# The map size in meters of the map for a single photo
photo_map_size = 1000

# default map popup position
# allowed values in ['N', 'NE', 'E', 'SE', 'S', 'SO', 'O', 'NO'] (see options.py)
default_map_popup_position = SE

# The maximum number of search album that will be loaded
# A value of 200 seems acceptable on a pc, 100 is more sure
max_search_album_number = 100

# should the internal Modernizr be used?
use_internal_modernizr = true

# set the javascript cache levels
# every tuple in the array represents a pair of:
# - minimum media number in album
# - max number of albums to retain in this cache
# The default values mean:
# - keep in cache only one album with more than 1000 media
# - keep in cache a maximum of 5 albums with 200-999 media
# - keep in cache all the albums with less than 200 media
js_cache_levels = [{"mediaThreshold": 10000, "max": 1}, {"mediaThreshold": 2000, "max": 2}, {"mediaThreshold": 1000, "max": 4}, {"mediaThreshold": 200, "max": 20}]


###########################################################
# user interface options
###########################################################

# the language for the web page, a two character code like 'en' (without quotes)
# If not set, the browser language is used
# If set, it overrides the browser language
language =

# the title of the collections of photos/albums
page_title = My photos

# Should the title be hidden by default?
# a right menu entry let the user show it
hide_title = false

# Should the bottom thumbnail in media view be hidden by default?
# a right menu entry let the user show it
hide_bottom_thumbnails = false

# Should the description/tags provided by metadata be hidden by default?
# right menu entries let the user show/hide it
hide_descriptions = false
hide_tags = true

# spacing between thumbnails, pixels (integer)
thumb_spacing = 4

# will photos/videos names be shown below the thumbnail in albums?
show_media_names_below_thumbs = true

# will album names be shown below the thumbnail?
# this option is not followed for virtual (date and gps) folders
show_album_names_below_thumbs = true

# should we show the media count in the album thumbnails and in the title?
show_album_media_count = true

# The css font-size value for the title on page top
# other values: large, small, or a px/em size
title_font_size = medium

# should be used a slide-like style?
albums_slide_style = true

#    ###
#    Color UI options (be sure not to have inconsistencies) ####
#    ###

# the page background color (this is ~ gray)
background_color = #222222

# the title color
title_color = white

# the title color when mouse is over it
title_color_hover = yellow

# the color to use for the photo/video name
media_name_color = lime

# the color to use for the album name
album_name_color = white

# the color to use for the album name
album_slide_name_color = olive

# the album buttons background color (this is a dirty white, in order to be like an old slide)
album_slide_background_color = cornsilk

# the album buttons background color for slide mode (this is lighter black)
album_slide_caption_color = gray

# the album buttons background color for no-slide mode
album_caption_color = white


#    ###
#    Other UI options ####
#    ###

# shoud metadata be shown persistently until they are closed?
persistent_metadata = false

# default initial sorting criterium: true = name, false = date/time
default_album_name_sort = true
default_media_name_sort = true

# should default sorting be reverse (more recent photos/videos top)?
default_album_reverse_sort = false
default_media_reverse_sort = false

# How many album thumbnails will fit at least on screen width?
# Album button sizes will be reduced in order that the given number of buttons fit in it
# if set to 1, no correction is made
min_album_thumbnail = 2

# Which social icons to display
# Possible values are:
# - none: No share icons displayed
# - facebook: Facebook icon (1)
# - whatsapp: Whatsapp icon (2)
# - twitter: Twitter icon (3)
# - google: Google+ (4)
# - linkedin: LinkedIn icon (5)
# - pinterest: Pinterest icon (6)
# - tumblr: Tumblr icon (7)
# - vk: VK icon (8)
# - buffer: Buffer icon (9)
# - email: Send by email (10)
# List the social icons you want to display in a string between spaces or commas.
# The order of items in the list does not change the order the social icons are displayed (shown
# in parenthesis in the possible values).
social = "facebook, twitter, pinterest, email"

# Social colored icons or gray ones
social_color = false

# Social icon size
# - small
# - medium (Default)
# - large
social_size = medium


# Google analytics id
# it has the form UA-XXXXXXX-1
google_analytics_id =

# piwik analytics server, in the form [http(s):]//server.com/[directory/]
# must end with slash
piwik_server =
# piwik site id (an integer)
# this parameter must come after piwik_server
piwik_id =
